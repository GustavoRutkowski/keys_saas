services:
  php-apache:
    build:
      context: .
      dockerfile: Dockerfile-php
    ports:
      - "${API_PORT}:80"
    volumes:
      # Monta tudo no Apache:
      - ./:/var/www/html

      # Monta só o backend no Apache:
      # - ./backend:/var/www/html

      # Monta o volume do vendor
      - vendor_data:/var/www/html/backend/vendor
    environment:
      - APACHE_PORT=80
    depends_on:
      - mysql
    networks:
      - app-network

  mysql:
    image: mysql:8.4
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/db/db.sql:/docker-entrypoint-initdb.d/db.sql
    networks:
      - app-network

  node-app:
    image: node:latest
    working_dir: /usr/src/app
    volumes:
      # monta só a pasta do frontend
      - ./frontend:/usr/src/app
      # node_modules como volume anônimo
      - /usr/src/app/node_modules
    environment:
      - START_MODE=${START_MODE}
    command: >
      sh -c "npm install &&
      (if [ \"$$START_MODE\" = \"DEV\" ]; then npm run start-dev; else npm run start; fi)"
    ports:
      - "3000:3000"
    depends_on:
      - mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data:
  vendor_data:
